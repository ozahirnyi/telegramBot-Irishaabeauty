from back.config import bot, main_keyboard
import back.binary as binary
import back.callback as callback
from back.config import smiles


# Start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç @irishaa_antonova, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?'
                     + smiles[6], reply_markup=main_keyboard)


# Main button pressed
@bot.message_handler(content_types=['text'])
def parse_input_message(message):
    if message.text.lower() == smiles[5] + ' –º–æ–∏ —Ä–∞–±–æ—Ç—ã':
        callback.myWorks(message)
    elif message.text.lower() == 'üìù –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è':
        callback.offers(message)
    elif message.text.lower() == 'üí¨ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å':
        callback.needToKnow(message)
    elif message.text.lower() == 'üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã':
        callback.contacts(message)
    elif message.text.lower() == smiles[1] + ' –ø—Ä–∞–π—Å':
        callback.price(message)
    elif message.text.lower() == smiles[4] + ' –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑':
        binary.main(message)
    else:
        bot.send_message(message.chat.id, "Oops something wrong!", reply_markup=main_keyboard)


# Inline button pressed
@bot.callback_query_handler(func=lambda call: True)
def help_handler(call):
    if call.message:
        if call.data == "First" or call.data == "Second":
            binary.tree_helper_init(call)
        elif call.data == "Start Choose":
            binary.tree_helper_init_start(call)
        elif call.data == "phone":
            callback.phone(call)
        else:
            bot.send_message(call.message.chat.id, "Oops, something wrong!", main_keyboard)


bot.polling()
